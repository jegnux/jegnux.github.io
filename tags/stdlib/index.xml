<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stdlib on ✨ Elegant Swift</title>
    <link>http://www.elegantswift.com/tags/stdlib/</link>
    <description>Recent content in Stdlib on ✨ Elegant Swift</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Jan 2018 00:34:59 +0100</lastBuildDate>
    
	<atom:link href="http://www.elegantswift.com/tags/stdlib/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Safe Collection Subscripting</title>
      <link>http://www.elegantswift.com/posts/safe-collection-subscripting/</link>
      <pubDate>Sun, 14 Jan 2018 00:34:59 +0100</pubDate>
      
      <guid>http://www.elegantswift.com/posts/safe-collection-subscripting/</guid>
      <description>As many Swift developers before me, I wanted to find a way to easily fetch an Element from a Collection with its Index, without having to manually check if the Index I give is in the Collection’s bounds.
On internet, we can find here, here, here and somewhere here this solution, which consists to add a label to the subscript parameter.
123456789101112131415161718192021222324252627282930 public extension Collection { private func distance(from startIndex: Index) -&amp;gt; IndexDistance { return distance(from: startIndex, to: self.</description>
    </item>
    
  </channel>
</rss>